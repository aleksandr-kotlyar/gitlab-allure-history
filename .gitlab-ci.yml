image: registry.gitlab.com/aleksandr-kotlyar/gitlab-allure-history:v4

stages:
  - build
  - test
  - report

build:
  image: docker:20.10.16
  stage: build
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: always
    - when: never
  services:
    - docker:20.10.16-dind
  variables:
    IMAGE_TAG: $CI_COMMIT_REF_SLUG
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$IMAGE_TAG .
    - docker push $CI_REGISTRY_IMAGE:$IMAGE_TAG

test:
  stage: test
  allow_failure: true
  script:
    - echo "${CI_JOB_ID}" > jobid
    - pytest tests
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: never
  artifacts:
    when: always
    expire_in: 2 hours
    paths:
      - allure-results
      - jobid

allure:
  stage: report
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: never
  script:
    - git clone --single-branch --branch gl-pages $CI_PROJECT_URL

    - JOB_ID=$(cat jobid)
    - REPORT=job_${JOB_ID}
    - CURRENT_BRANCH=${CI_PROJECT_NAME}/public/${CI_COMMIT_REF_NAME}
    - cp -r ./${CURRENT_BRANCH}/history allure-results || echo "No history"

    #echo "executor.json"
    - echo '{"name":"GitLabCI","type":"gitlab","reportName":"Allure Report with history",' > executor.json
    - echo "\"reportUrl\":\"${CI_PAGES_URL}/${CI_COMMIT_REF_NAME}/${REPORT}/\"," >> executor.json
    - echo "\"buildUrl\":\"${CI_PIPELINE_URL}\"," >> executor.json
    - echo "\"buildName\":\"GitLab Job Run ${JOB_ID}\",\"buildOrder\":\"${JOB_ID}\"}" >> executor.json
    #cat executor.json
    - mv ./executor.json ./allure-results

    - allure generate allure-results -o $REPORT

    - mkdir -p $CURRENT_BRANCH
    - cp -r $REPORT $CURRENT_BRANCH
    - cp -r ${REPORT}/history $CURRENT_BRANCH
    - cp -r generate_index.py $CI_PROJECT_NAME
    - cd $CI_PROJECT_NAME
    - python3 generate_index.py public
    - python3 generate_index.py public/${CI_COMMIT_REF_NAME}

    - mkdir ~/.ssh/
    - apk add openssh-client
    - GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no"
    - ssh-keyscan -t rsa gitlab.com >> ~/.ssh/known_hosts
    - echo "${SSH_PUSH_KEY}" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa

    - git config user.name "Gitlab Runner"
    - git config user.email ${CI_EMAIL}
    - >
      git remote add $CI_PROJECT_NAME 
      git@gitlab.com:aleksandr-kotlyar/gitlab-allure-history.git
    - git add ./public
    - git commit -m "pipeline_${CI_PIPELINE_ID}_job_${CI_JOB_ID}"
    - git push -u $CI_PROJECT_NAME
